#free dragon planter 3d printable script

import bpy 
import mathutils

#don't forget to export as .stl or .obj or other printable formats
#also don't forget to scale! I wrote it not realizing it was in centimeters!

#importing primitive shapes example
#firstshape = bpy.ops.mesh.primitive_cylinder_add(location =(3, 3, 0))



# mesh and object variables
bodymesh = bpy.data.meshes.new("Body")
bodyobject = bpy.data.objects.new("Body", bodymesh)


#defines where the shape will show up & links to scene
bodyobject.location = bpy.context.scene.cursor_location


#body
bpy.context.scene.objects.link(bodyobject)
bodymesh.from_pydata([
#base verts 0 - 20
(0, 2, 0), (0, 4, 0), (0.3, 1.5, 0), 
(0.3, 4.5, 0), (0.3, 5, 0), (0.3, 1, 0),
(0.8, 5.3, 0), (0.8, .7, 0), (1.8, 5.3, 0),
(1.8, .7, 0), (2.5, 5, 0), (2.5, 1, 0),
(2.5, 4.5, 0), (2.5, 1.5, 0), (4, 4.5, 0), 
(4, 1.5, 0), (4.8, 3.7, 0), (4.8, 2.4, 0),
 (4.8, 3.4, 0), (4.8, 2.7, 0), (4, 3, 0),
 #second layer 21-34
 (0, 2, .5), (0, 4, .5), (0.3, 1.5, .5),
 (0.3, 4.5, .5), (0.3, 5, .5), (0.3, 1, .5),
 (0.8, 5.3, .5), (0.8, .7, .5), (1.8, 5.3, .5),
 (1.8, .7, .5), (2.5, 5, .5), (2.5, 1, .5),
 (2.5, 4.5, .5), (2.5, 1.5, .5),
 #third layer 35-42
 (0.5, 1.8, 1.25), (0.5, 4.2, 1.25), (0.8, 1.3, 1.25),
 (0.8, 4.7, 1.25),(1.8, 1.3, 1.25), (1.8, 4.7, 1.25), 
 (1.8, 1.8, 1.5), (1.8, 4.2, 1.5),
 #nitch 43-48
 (3, 2.55, 1.5), (3, 3.55, 1.5), 
 (3, 2.55, .75), (3, 3.55, .75),
 (3.75, 2.55, .75), (3.75, 3.55, .75),
 #storage 49-60
 (2.65, 3.25, 1.5), (2.65, 2.75, 1.5), (2.35, 2.35, 1.5),
 (2, 2.1, 1.5), (1.5, 2.1, 1.25), (1, 2.25, 1.25),
 (.75, 2.75, 1.25), (.75, 3.25, 1.25), (1, 3.75, 1.25),
 (1.5, 3.9, 1.25), (2, 3.9, 1.5), (2.35, 3.75, 1.5),
 #61-72
 (2.75, 3.25, .75), (2.75, 2.75, .75), (2.5, 2.25, .75),
 (2, 2, .5), (1.5, 2, .5), (1, 2.25, .5),
 (.75, 2.75, .5), (.75, 3.25, .5), (1, 3.75, .5),
 (1.5, 4, .5), (2, 4, .5), (2.5, 3.75, .75)
 ], 
 #edges
[], 
[
#base face
(0, 1, 3, 4, 6, 8, 10, 12, 14, 16, 18, 20, 19, 17, 15, 13, 11, 9, 7, 5, 2, 0),
#second layer
(0, 1, 22, 21), (1, 3, 24, 22), (3, 4, 25, 24),
(4, 6, 27, 25), (6, 8, 29, 27), (8, 10, 31, 29),
(10, 12, 33, 31), (0, 2, 23, 21), (2, 5, 26, 23),
(5, 7, 28, 26), (7, 9, 30, 28), (9, 11, 32, 30),
(11, 13, 34, 32),
#third layer
(21, 22, 36, 35), (21, 23, 35), (22, 24, 36),
(23, 35, 37), (24, 36, 38), (23, 26, 37),
(24, 25, 38), (26, 28, 37), (25, 27, 38),
(28, 30, 39, 37), (27, 29, 40, 38), (30, 32,39),
(29, 31, 40), (32, 34, 41, 39), (31, 33, 42, 40) ,
#front
(20, 47, 48),(20, 19, 47), (20, 18, 48),
(18, 16, 48), (19, 17, 47), (16, 14, 48),
(17, 15, 47), (14, 12, 33), (15, 13, 34),
(14, 33, 48), (15, 34, 47), (48, 33, 42),
(47, 34, 41), (48, 42, 44), (47, 41, 43),
#nitch
(43, 44, 46, 45), (44, 48, 46), (43, 47, 45),
(48, 47, 45, 46),
#storage
(61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72),
(49, 50, 62, 61), (50, 51, 63, 62), (51, 52, 64, 63),
(52, 53, 65, 64), (53, 54, 66, 65), (54, 55, 67, 66),
(55, 56, 68, 67), (56, 57, 69, 68), (57, 58, 70, 69),
(58, 59, 71, 70), (59, 60, 72, 71), (60, 49, 61, 72),
#top
(44, 43, 41, 53, 52, 51, 50, 49, 60, 59, 58, 42),
(58, 42, 40, 38, 36, 35, 37, 39, 41, 53, 54, 55, 56, 57)
])
bodymesh.update(calc_edges=True)

smoothBody = bodymesh.polygons
for p in smoothBody:
    p.use_smooth = True 
    
    
 
#head
headmesh = bpy.data.meshes.new("head")
headobject = bpy.data.objects.new("head", headmesh)

headobject.location = bpy.context.scene.cursor_location

bpy.context.scene.objects.link(headobject)

headmesh.from_pydata([
#nitch 0-5
(5, 5.05, 0), (5, 5.95, 0), (5, 5.05, .75),
(5, 5.95, .75), (5.75, 5.05, 0), (5.75, 5.95, 0),
#base 6-9
(6, 4.5, 0), (6, 6.5, 0), (6.3, 5, 0),
(6.3, 6, 0),
#first layer 10 - 14
(6, 3.5, .5), (6, 7.5, .5), (7, 5, .5),
(7, 6, .5), (7, 5.5, .5),
#second layer 15-18
(6, 3.5, .75), (6, 7.5, .75), (7, 5, .75),
(7, 6, .75),
#ear1 19-22
(6, 2.75, 2.5), (6, 4, 2.5), (6.5, 3.75, 1.5),
(5.5, 3.75, 1.5),
#ear2 23 - 26
(6, 7.5, 3), (6, 6.5, 2.5), (6.5, 7, 1.75),
(5.5, 7, 1.75),
#crown 27-30
(6.5, 5.5, 2.5), (5.3, 5.05, 2.5), (5.3, 5.95, 2.5),
(6, 5.5, 2.75)
],
#edges
[],
[
#nitch
(0, 1, 3, 2), (0, 1, 5, 4), (1, 3, 5), (0, 2, 4),
#base
(4, 5, 7, 9, 8, 6),
#first layer
(7, 9, 13, 11), (9, 8, 12, 13), (8, 6, 10, 12),
(7, 5, 3, 11), (6, 1, 2, 10),
#second layer
(2, 15, 10), (15, 10, 12, 17), (12, 17, 14),
(14, 18, 13), (13, 18, 16, 11), (16, 11, 3),
#ear1
(15, 19, 21), (19, 20, 21), (19, 20, 22), (19, 22, 15),
#ear2
(16, 23, 25), (16, 23, 26), (23, 24, 25),
(23,24, 26),
#dome
(17, 14, 18, 27),(15, 17, 21),(18, 16, 25), (21, 27, 17),
(25, 27, 18), (21, 20, 27), (27, 25, 24),
(2, 3, 29, 28), (2, 28, 22), (2, 22, 15),
(22, 28, 20), (3, 16, 26), (3, 29, 26),
(29, 26, 24), (27, 24, 30), (27, 20, 30),
(20, 30, 28), (30, 24, 29), (29, 28, 30)

])


headmesh.update(calc_edges=True)


smoothHead = headmesh.polygons
for p in smoothHead:
    p.use_smooth = True
